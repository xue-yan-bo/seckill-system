version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: seckill-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: seckill_db
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - seckill-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis缓存
  redis:
    image: redis:6-alpine
    container_name: seckill-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - seckill-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ消息队列
  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    container_name: seckill-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - seckill-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Mock API服务器
  mock-server:
    build:
      context: ./mock-server
      dockerfile: Dockerfile
    container_name: seckill-mock-server
    ports:
      - "3000:3000"
    networks:
      - seckill-network
    depends_on:
      - mysql
      - redis
      - rabbitmq
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 前端应用
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: seckill-frontend
    ports:
      - "8080:80"
    networks:
      - seckill-network
    depends_on:
      - mock-server
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  seckill-network:
    driver: bridge

volumes:
  mysql-data:
  redis-data:
  rabbitmq-data:

